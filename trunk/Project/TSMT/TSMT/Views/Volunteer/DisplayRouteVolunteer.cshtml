@using System.Collections
@using System.Web.UI.WebControls
@using Microsoft.Ajax.Utilities
@using TSMT.Models

<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<h2>DisplayRoute</h2>
<head>

    <meta charset="utf-8" />
    @* <style>
            controls {
                margin-top: 16px;
                border: 1px solid transparent;
                border-radius: 2px 0 0 2px;
                box-sizing: border-box;
                -moz-box-sizing: border-box;
                height: 32px;
                outline: none;
                box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
            }

            #pac-input {
                background-color: #fff;
                padding: 0 11px 0 13px;
                width: 400px;
                font-family: Roboto;
                font-size: 15px;
                font-weight: 300;
                text-overflow: ellipsis;
            }
        </style>*@
    <title>Google Map Demo</title>
    <!--<script src="https://maps.googleapis.com/maps/api/js?sensor=true"></script>-->

</head>
<body>
    <div id="route" style="display: none">@ViewData["StarEndPoint"]</div>
    <div id="way" style="display: none">@ViewData["WayPoint"]</div>
    <div id="pId" style="display: none">@ViewData["ScheduleId"]</div>
    @*<div id="wayEdit" style="display: none">@ViewData["WayPointEdit"]</div>*@
    <div>
        <div id="map_canvas" style="float: left; width: 70%; height: 1000px; margin: 0px; padding: 0px">
        </div>
        <form onreset="resetFunction()">


            <input type="reset" value="Reset" />
            <button id="Save" onclick="callAjaxSave(); return false;">Save</button>
            <div id="directionsPanel" style="float: right; width: 30%; height: 1000px;">
            </div>
        </form>
    </div>


</body>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"></script>

<script>

    var divroute = document.getElementById("route");
    var routeString = divroute.textContent;
    var startPoint = routeString.split(";")[0];
    var endPoint = routeString.split(";")[1];
    var wpj = document.getElementById("way").textContent;
    var waypointDisplay = [];
    var wp;
    if (wpj != "") {
        wp = JSON.parse(wpj);
        for (var i = 0; i < wp.length; i++) {
            waypointDisplay.push({ "location": new google.maps.LatLng(wp[i].location.k, wp[i].location.A)});
        }
    }



    var test;
    var map = new google.maps.Map(document.getElementById('map_canvas'), {
        zoom: 8,
        center: new google.maps.LatLng(),
        mapTypeId: google.maps.MapTypeId.ROADMAP
    }),
        directions = new google.maps.DirectionsService(),
        displayer = new google.maps.DirectionsRenderer({
            draggable: true
        });
    var directionsDisplay = displayer;
    function calcRoute() {
        if (wpj == "") {
            displayer.setMap(map);
            directions.route({
                origin: startPoint,
                destination: endPoint,
                //waypoints: waypointDisplay,
                travelMode: google.maps.DirectionsTravelMode.DRIVING
            }, function (result) {
                displayer.setDirections(result);
            });
        } else {
            displayer.setMap(map);
            directions.route({
                origin: startPoint,
                destination: endPoint,
                waypoints: waypointDisplay,
                travelMode: google.maps.DirectionsTravelMode.DRIVING
            }, function (result) {
                displayer.setDirections(result);
            });
        }

        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(document.getElementById('directionsPanel'));

        //google.maps.event.addDomListener(window, 'load', initialize);
        //google.maps.event.addListener(displayer, 'directions_changed', some_method);
        //var some_method = function () {
        //    var waypointsEdit = displayer.directions.routes[0].legs[0].via_waypoint
        //    test = waypointsEdit;
        //    return waypointsEdit;
        //};
        google.maps.event.addListener(directionsDisplay, 'directions_changed', function () {
            var waypointsEdit = [];
            if (wpj != "") {
                //waypointsEdit = wp;
                var a = displayer.directions.routes[0].legs;
                for (var i = 0; i < a.length; i++) {
                    var b = displayer.directions.routes[0].legs[i].via_waypoint;
                    if (b.length > 0) {
                        for (var k = 0; k < b.length; k++) {
                            waypointsEdit.push(b[k]);
                        }

                    }
                    if (i != a.length - 1) {
                        var c = displayer.directions.routes[0].legs[i].end_location;
                        waypointsEdit.push({
                            location: {k: c.k, A: c.A}
                        });
                    }
                    
                    
                }
                //for (var t = 0; t < waypointsEdit.length - 1; t++) {
                //    for (var j = t + 1; j < waypointsEdit.length; j++) {
                //        if (waypointsEdit[t].step_index > waypointsEdit[j].step_index || ((waypointsEdit[t].step_index == waypointsEdit[j].step_index) && (waypointsEdit[t].step_interpolation > waypointsEdit[j].step_interpolation))) {
                //            term = waypointsEdit[t];
                //            waypointsEdit[t] = waypointsEdit[j];
                //            waypointsEdit[j] = term;
                //        }
                //    }

                //}
                //waypointsEdit.push(wp);
            } else {
                waypointsEdit = displayer.directions.routes[0].legs[0].via_waypoint;
            }


            test = JSON.stringify(waypointsEdit);
            console.log(test);

        });


    }



    google.maps.event.addDomListener(window, 'load', calcRoute);
    function resetFunction() {
        calcRoute();
        alert("The route will be reset");
    }

    function callAjaxSave() {
        //var id = document.getElementById("pId").parseInt;
        //var idDiv = document.getElementById("pId");
        //var id = idDiv.textContent.parseInt;
        $.ajax({
            url: '/Volunteer/SaveRoute',
            type: 'POST',
            data: { scheduleId: @ViewData["ScheduleId"] , waypoints: test },
            success: function (r) {
                alert("Đường đi đã được lưu");
            }
        });
    }
</script>
</html>
