@{
    ViewBag.Title = "Xe " + @Model.NumberPlate;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using TSMT.Models
@model Car

<h3>Xe @Model.NumberPlate</h3>
<div class="panel panel-blue margin-bottom-20">
    <div class="panel-heading">
        <h3 class="panel-title"><i class="icon-list">&nbsp;Thông tin chi tiết</i></h3>
    </div>
    <div class="panel-body">
        <table class="table table-hover">
            <tr>
                <th>Tài xế</th>
                <td>@Model.DriverName</td>
            </tr>
            <tr>
                <th>SĐT tài xế</th>
                <td>@Model.DriverPhone</td>
            </tr>
            <tr>
                <th>Tổng số chỗ</th>
                <td>@Model.TotalSlots</td>
            </tr>
            <tr>
                <th>Số chỗ còn trống</th>
                <td> @Model.AvailableSlots</td>
            </tr>

        </table>
    </div>
</div>
<div class="panel panel-blue margin-bottom-20">
    <div class="panel-heading">
        <h3 class="panel-title"><i class="icon-list">&nbsp;Danh sách các thí sinh được sắp xếp đưa đón</i></h3>
    </div>
    <div class="panel-body">
        @if (Model.ExaminationsPapers.Count == 0)
        {
            <p># Chưa được sắp xếp #</p>
        }
        else
        {
        <table class="table table-hover">
            <tr>
                <th>#</th>
                <th>Thí sinh</th>
                <th>SĐT</th>
                <th>Nhóm</th>
                <th>Địa điểm thi</th>
            </tr>
            @{
                int counter = 1;
                foreach (ExaminationsPaper item in Model.ExaminationsPapers)
                {                          
                <tr>
                    <td>@counter</td>
                    <td>@item.Candidate.Account.Profile.Lastname @item.Candidate.Account.Profile.Firstname</td>
                    <td>@item.Candidate.Account.Profile.PhoneNumber</td>
                    <td>
                        @if (item.GroupID == null)
                        {
                            <text>Cá nhân</text>
                        }
                        else
                        {
                            <text><a href="/Charity/ViewGroup/@item.GroupID">Nhóm @item.GroupID</a></text>
                        }
                    </td>
                    <td>@item.Venue.Address</td>
                </tr>
                        ++counter;
                }
            }
        </table>
        }
    </div>
</div>
<div class="panel panel-blue margin-bottom-20">
    <div class="panel-heading">
        <h3 class="panel-title"><i class="icon-list">&nbsp;Lịch trình đưa đón</i></h3>
    </div>
    <div class="panel-body">
        <p>Đợt thi: @Model.ChairitiesExam.Examination.Name (từ ngày @Model.ChairitiesExam.Examination.BeginDate.ToString("dd/MM/yyyy") đến ngày @Model.ChairitiesExam.Examination.EndDate.ToString("dd/MM/yyyy"))</p>
        <table class="table table-hover">
            <tr>
                <th>Ngày thi</th>
                <th>Giờ đi</th>
                <th>Giờ đón</th>
            </tr>
            @foreach (ScheduleExam se in @Model.ChairitiesExam.Examination.ScheduleExams)
            {
                <tr>
                    <td>@se.Day.ToString("dd/MM/yyyy")</td>
                    <td>@se.BeginTime.AddHours(-1.5).ToShortTimeString()</td>
                    <td>@se.EndTime.AddHours(-1).ToShortTimeString()</td>
                </tr>
            }
        </table>
    </div>
</div>
<div class="panel panel-blue margin-bottom-20">
    <div class="panel-heading">
        <h3 class="panel-title"><i class="icon-list">&nbsp;Bản đồ đường đi</i></h3>
    </div>
    <div class="panel-body">
        @if (Model.ExaminationsPapers.Count == 0)
        {
            <p># Chưa được sắp xếp #</p>
        }
        else
        {
            <div id="map_canvas" style="width: 100%; height: 500px;"></div>
            <table class="table table-hover">
                <tr>
                    <th>Độ dài đường đi:</th>
                    <td><span id="TotalDistance"></span></td>
                </tr>
                <tr>
                    <th>Thời gian dự kiến:</th>
                    <td><span id="TotalTime"></span></td>
                </tr>
                <tr>
                    <th>Địa điểm đón thí sinh (A):</th>
                    <td>@(((List<string>)ViewData["Place"])[0])</td>
                </tr>
            @for (int i = 1; i < ((List<string>)ViewData["Place"]).Count; i++)
            {
                <tr>
                    <th>Địa điểm thi (@((char)(65+i))):</th>
                    <td>@(((List<string>)ViewData["Place"])[i])</td>
                </tr>
            }
            </table>
            
            <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"></script>
            <script type="text/javascript">
                var myJSONText = "";
                var address = [];
                var allwaypoints = [];
                var minD = 999;
                var numbering = 0;
                var routeSuggest = [];
                var count = 0;
                var shortestRoute = [];

    @foreach (var place in (IEnumerable<string>)ViewData["Place"])
    {
        <text>
                routeSuggest[count] = { name: '@place' }
                count++;
        </text>
    }

                var leg = [];
                var rendererOptions = { draggable: false };

                var dirRenderer = new google.maps.DirectionsRenderer({ draggable: false });
                var directionsDisplay = dirRenderer;
                var directionsService = new google.maps.DirectionsService();
                function initialize() {
                    var map_canvas = document.getElementById('map_canvas');
                    var map_options = {
                        center: new google.maps.LatLng(10.7725662, 106.6979917),
                        zoom: 17,
                        mapTypeId: google.maps.MapTypeId.ROADMAP
                    }
                    var map = new google.maps.Map(map_canvas, map_options)

                    directionsDisplay.setMap(map);
                    directionsDisplay.setPanel(document.getElementById('directionsPanel'));
                    createInput();
                    genRoute();
                }

                google.maps.event.addDomListener(window, 'load', initialize);

                function createInput() {
                    for (var i = 0; i < routeSuggest.length; ++i) {
                        var tmp = {
                            index: i,
                            data: routeSuggest[i].name
                        };
                        allwaypoints.push(tmp);
                    }
                }

                function genRoute() {
                    var n = allwaypoints.length;
                    var i = n - 1;

                    while (i > 0) {
                        var routeCom = allwaypoints;
                        var wayCom = [];
                        if (routeCom.length >= 3) {
                            for (var o = 2; o <= routeCom.length - 1; o++) {
                                wayCom.push({ location: routeCom[o].data, });
                            }
                        }
                        var request = {
                            origin: allwaypoints[0].data,
                            destination: allwaypoints[1].data,
                            waypoints: wayCom,
                            travelMode: google.maps.TravelMode.DRIVING
                        };

                        directionsService.route(request, function (response, status) {
                            if (status == google.maps.DirectionsStatus.OK) {
                                computeTotalDistance(response);
                            }
                        });

                        i = n - 2;
                        while ((i > -1) && (allwaypoints[i].index > allwaypoints[i + 1].index))--i;
                        if (i > -1) {
                            var k = n - 1;
                            while (allwaypoints[k].index < allwaypoints[i].index)--k;
                            swap(k, i);
                            var x = i + 1;
                            var y = n - 1;
                            while (x < y) {
                                swap(x, y);
                                ++x;
                                --y;
                            }
                        }
                    }

                }

                function swap(i, j) {
                    var tmp = allwaypoints[i];
                    allwaypoints[i] = allwaypoints[j];
                    allwaypoints[j] = tmp;
                }

                function computeTotalDistance(result) {
                    var total = 0;
                    var time = 0;
                    var myroute = result.routes[0];
                    for (var i = 0; i < myroute.legs.length; i++) {
                        total += myroute.legs[i].distance.value;
                        time += myroute.legs[i].duration.value;
                    }
                    total = total / 1000.0;

                    if (total < minD) {
                        minD = total;
                        var DistanceCount = document.getElementById('TotalDistance');
                        var TimeCount = document.getElementById('TotalTime');
                        DistanceCount.innerHTML = Math.round(minD) + " km.";
                        TimeCount.innerHTML = Math.round(time / 60) + " phút.";
                        shortestRoute = [];
                        var s = '';
                        for (var i = 0; i < myroute.legs.length; ++i) {
                            s += i + 1 + ' -- ' + myroute.legs[i].start_address + '<br>';
                            shortestRoute.push(myroute.legs[i].start_address);

                        }
                        s += myroute.legs.length + 1 + ' -- ' + myroute.legs[myroute.legs.length - 1].end_address;
                        shortestRoute.push(myroute.legs[myroute.legs.length - 1].end_address);
                    }

                    calcRoute();
                }
                function calcRoute() {
                    $('#TotalDistance').innerHTML = "";
                    var route = shortestRoute;
                    var way = [];
                    if (route.length >= 3) {
                        for (var i = 1; i < route.length - 1; i++) {
                            way.push({ location: route[i], });
                        }

                        var request = {
                            origin: route[0],
                            destination: route[route.length - 1],
                            waypoints: way,
                            travelMode: google.maps.TravelMode.DRIVING
                        };

                        directionsService.route(request, function (response, status) {
                            if (status == google.maps.DirectionsStatus.OK) {
                                directionsDisplay.setDirections(response);
                            }
                        });
                    }
                    else {
                        var request = {
                            origin: route[0],
                            destination: route[1],
                            travelMode: google.maps.TravelMode.DRIVING
                        };
                        directionsService.route(request, function (response, status) {
                            if (status == google.maps.DirectionsStatus.OK) {
                                directionsDisplay.setDirections(response);
                            }
                        });
                    }
                }

                google.maps.event.addListener(dirRenderer, 'directions_changed', function () { });
            </script>
        }
    </div>
</div>
  @*<a href="@Url.Action("ManageCarCharity", "Charity")" class="btn-u btn-u-default"><i class="icon-chevron-sign-left"></i>&nbsp;Quay lại</a>*@
<a onclick="history.back(-1)" class="btn-u btn-u-default"><i class="icon-chevron-sign-left"></i>&nbsp;Quay lại</a>
<script>
    $(".panel-heading").click(function () {
        $(this.parentNode).find(".panel-body").slideToggle();
    });
</script>